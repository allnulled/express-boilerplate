Ejecutable como documento HTML5
    con autor allnulled
    con nombre index
    con versi√≥n 1
<head>
    <title>üåê Interfaz de usuario</title>
    <meta charset="utf8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="lib/ui-script/ui-script.css" />
    <link rel="stylesheet" type="text/css" href="lib/win7/win7.scoped.2.css" />
    <script src="lib/calo/calo.js"></script>
    <script src="lib/ui-script/ui-script.js"></script>
    <style>
      h5 {
        background-color: #333;
        color: white;
        padding: 12px;
        margin: 0px;
        font-size: 12px;
        font-family: Arial;
      }
    </style>
</head>
<body><div id="app"></div></body>.

asigno window.PaginaDeInicio como un componente vue2 con nombre "PaginaDeInicio" con plantilla {
  <div class="PaginaDeInicio Component">
    <xtitle>Inicio</xtitle>
    <xlayout>
      
    </xlayout>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      propiedad root como {
        propiedad type como Object.
        propiedad required como true.
      }.
    }.
    m√©todo data donde {
      retorno {}.
    }.
    propiedad methods como {}.
    propiedad watch como {}.
    propiedad computed como {}.
    m√©todo beforeCreate donde {}.
    m√©todo created donde {}.
    m√©todo beforeMount donde {}.
    m√©todo mounted donde {}.
    m√©todo beforeUpdate donde {}.
    m√©todo updated donde {}.
    m√©todo beforeUnmount donde {}.
    m√©todo unmounted donde {}.
    m√©todo activated donde {}.
    m√©todo deactivated donde {}.
  }.
}.

asigno window.PaginaDeLogin como un componente vue2 con nombre "PaginaDeLogin" con plantilla {
  <div class="PaginaDeLogin Component">
    <xtitle>Login</xtitle>
    <xstatic>
      <xwindow>
        <xwindowtitle>
          Credenciales requeridas
        </xwindowtitle>
        <xwindowbody>
          <xlayout>
            <xpanel>
              <xlabel>Nombre:</xlabel>
              <input style="width:100%;" type="text" name="nombre" v-model="nombre" />
            </xpanel>
            <xpanel style="padding-top:8px;">
              <xlabel>Contrase√±a:</xlabel>
              <input style="width:100%;" type="password" name="contrasenya" v-model="contrasenya" />
            </xpanel>
          </xlayout>
          <hr style="border:none;border-top:1px solid #CCC;margin:4px;" />
          <xlayout style="text-align:right;">
            <button v-on:click="root.login(nombre, contrasenya)">Entrar</button>
          </xlayout>
        </xwindowbody>
        <xwindowfooter>‚úî Cargado correctamente.</xwindowfooter>
      </xwindow>
    </xstatic>
  </div>
} con l√≥gica {
  retorno {
    propiedad props como {
      propiedad root como {
        propiedad type como Object.
        propiedad required como true.
      }.
    }.
    m√©todo data donde {
      desacoplo constantes { nombre, contrasenya } a partir de this.obtener_credenciales_pasadas().
      retorno {
        nombre,
        contrasenya
      }.
    }.
    propiedad methods como {
      m√©todo obtener_credenciales_pasadas donde {
        creo variable datos_json como localStorage.__express_boilerplate_login_credentials__.
        si datos_json no es tipo texto asigno datos_json como '{"nombre":"","contrasenya":""}'.
        creo datos como datos_json parseado como json.
        retorno datos.
      }.
      m√©todo persistir_credenciales con (nombre, contrasenya) donde {
        asigno localStorage.__express_boilerplate_login_credentials__ como { nombre, contrasenya } textualizado.
        retorno true.
      }.
    }.
    propiedad watch como {}.
    propiedad computed como {}.
    m√©todo beforeCreate donde {}.
    m√©todo created donde {}.
    m√©todo beforeMount donde {}.
    m√©todo mounted donde {}.
    m√©todo beforeUpdate donde {}.
    m√©todo updated donde {}.
    m√©todo beforeUnmount donde {}.
    m√©todo unmounted donde {}.
    m√©todo activated donde {}.
    m√©todo deactivated donde {}.
  }.
}.

asigno window.App como una aplicaci√≥n vue2 con nombre "App" con rutas [{
  propiedad path como "/".
  propiedad name como "PaginaDeInicio".
  propiedad component como PaginaDeInicio.
  propiedad props como {}.
}] con traducciones {
    propiedad es como {}.
    propiedad en como {}.
    propiedad ca como {}.
} con plantilla {
  <div class="App Component Castelog-app win7">
    <template v-if="sesion_token">
      <router-view :root="this"></router-view>
    </template>
    <template v-else="">
      <PaginaDeLogin :root="this" ref="pagina_de_login"></PaginaDeLogin>
    </template>
    <xdialogport></xdialogport>
  </div>
} con estilos {
    html {}
    body {}
    .Component {}
    .App {}
} con l√≥gica {
  retorno {
    m√©todo data donde {
      retorno {
        sesion_token: undefined
      }.
    }.
    propiedad methods como {
      m√©todo as√≠ncrono login con (nombre, contrasenya) donde {
        creo respuesta_login como as√≠ncronamente una petici√≥n http
          con url "/Login"
          con m√©todo "POST"
          con cuerpo { nombre, contrasenya }
          con cabeceras {}.
        hago this.$refs.pagina_de_login.persistir_credenciales(nombre, contrasenya).
        asigno this.sesion_token como respuesta_login.data.data.sesion.token.
      } en errores hago Vue.prototype.$dialogs.inform("<xlayout>" + Vue.prototype.$dialogs.escapeHtml(error.name) + " " + Vue.prototype.$dialogs.escapeHtml(error.message) + "</xlayout>").
    }.
    propiedad watch como {}.
    m√©todo beforeMount donde {
      asigno this.$window como window.
    }.
    m√©todo mounted donde {}.
  }.
} montada en "#app".