Ejecutable como documento HTML5
    con autor allnulled
    con nombre index
    con versión 1
<head>
    <title>🌐 Interfaz de usuario</title>
    <meta charset="utf8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" type="text/css" href="lib/ui-script/ui-script.css" />
    <link rel="stylesheet" type="text/css" href="lib/win7/win7.scoped.2.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_administracion/pagina_de_administracion.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_ayuda/pagina_de_ayuda.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_inicio/pagina_de_inicio.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_login/pagina_de_login.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_abrir_tabla/pagina_de_abrir_tabla.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_abrir_fila/pagina_de_abrir_fila.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_crear_item/pagina_de_crear_item.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_esquema/pagina_de_esquema.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/pagina_de_autentificacion/pagina_de_autentificacion.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/selector_de_tabla/selector_de_tabla.css" />
    <link rel="stylesheet" type="text/css" href="lib/components/vuejs-calendario/vuejs-calendario.css" />
    
    <script src="lib/calo/calo.js"></script>
    <script src="lib/ui-script/ui-script.js"></script>
    <script src="lib/components/pagina_de_administracion/pagina_de_administracion.js"></script>
    <script src="lib/components/pagina_de_ayuda/pagina_de_ayuda.js"></script>
    <script src="lib/components/pagina_de_inicio/pagina_de_inicio.js"></script>
    <script src="lib/components/pagina_de_login/pagina_de_login.js"></script>
    <script src="lib/components/pagina_de_abrir_tabla/pagina_de_abrir_tabla.js"></script>
    <script src="lib/components/pagina_de_abrir_fila/pagina_de_abrir_fila.js"></script>
    <script src="lib/components/pagina_de_crear_item/pagina_de_crear_item.js"></script>
    <script src="lib/components/pagina_de_esquema/pagina_de_esquema.js"></script>
    <script src="lib/components/pagina_de_autentificacion/pagina_de_autentificacion.js"></script>
    <script src="lib/components/selector_de_tabla/selector_de_tabla.js"></script>
    <script src="lib/components/vuejs-calendario/vuejs-calendario.js"></script>
    <style>
      html {
        background-color: #555;
        color: white;
      }
      * {
        font: 9pt Segoe UI,Sans-serif;
      }
      h5 {
        background-color: #333;
        color: white;
        padding: 12px;
        margin: 0px;
        font-size: 12px;
        font-family: Arial;
      }
      .width_100 {
        width: 100%;
      }
      .boton_ancho_centro {
        width: 100%;
        margin-top: 4px;
        text-align: center;
      }
      .boton_ancho_izquierda {
        width: 100%;
        margin-top: 4px;
        text-align: left !important;
      }
      .win7 button {
        word-break: break-all;
      }
      .win7 button.boton_verde {
        background: linear-gradient(180deg,#b0d2a1 45%,#91db86 0,#71935e);
        border: 1px solid #8eff8f;
        outline: none;
      }
      .win7 button.boton_verde:hover,
      .win7 button.boton_verde.active {
        background: linear-gradient(180deg,#83ff56 45%,#77e373 0);
        border-color: #40b13c;
      }
      .win7 button.boton_azul {
        background: linear-gradient(180deg,#a5e2ff 45%,#bdb8ff 0,#00c3d7);
        border: 1px solid #7aecff;
        outline: none;
      }
      .win7 button.boton_azul:hover,
      .win7 button.boton_azul.active {
        background: linear-gradient(180deg,#6ccfff 45%,#46c8f0 0);
        border-color: #6363ff;
      }
      .win7 button.boton_rojo {
        background: linear-gradient(180deg,#f2adad 45%,#faa 0,#e62626);
        border: 1px solid #7aecff;
        outline: none;
      }
      .win7 button.boton_rojo:hover,
      .win7 button.boton_rojo.active {
        background: linear-gradient(180deg,#f97777 45%,#ff4e4e 0);
        border-color: #ff6363;
      }
      .win7 a {
        color: #97c9fb;
      }
      .padding_top_1 {
        padding-top: 4px;
      }
      .padding_bottom_1 {
        padding-bottom: 4px;
      }
      .margin_left_1 {
        margin-left: 4px;
      }
      .margin_right_1 {
        margin-right: 4px;
      }
      .margin_top_1 {
        margin-top: 4px;
      }
      .margin_bottom_1 {
        margin-bottom: 4px;
      }
      .imagen_de_fichero {
        max-width: 200px;
      }
    </style>
</head>
<body><div id="app"></div></body>.

asigno window.App como una aplicación vue2 con nombre "App" con rutas [{
  propiedad path como "/".
  propiedad name como "PaginaDeInicio".
  propiedad component como PaginaDeInicio.
  propiedad props como {}.
}, {
  propiedad path como "/administracion".
  propiedad name como "PaginaDeAdministracion".
  propiedad component como PaginaDeAdministracion.
  propiedad props como {}.
}, {
  propiedad path como "/abrir-tabla/:tabla".
  propiedad name como "PaginaDeAbrirTabla".
  propiedad component como PaginaDeAbrirTabla.
  propiedad props como {}.
}, {
  propiedad path como "/abrir-fila/:tabla/:fila".
  propiedad name como "PaginaDeAbrirFila".
  propiedad component como PaginaDeAbrirFila.
  propiedad props como {}.
}, {
  propiedad path como "/crear-item/:tabla".
  propiedad name como "PaginaDeCrearItem".
  propiedad component como PaginaDeCrearItem.
  propiedad props como {}.
}, {
  propiedad path como "/ayuda".
  propiedad name como "PaginaDeAyuda".
  propiedad component como PaginaDeAyuda.
  propiedad props como {}.
}, {
  propiedad path como "/esquema".
  propiedad name como "PaginaDeEsquema".
  propiedad component como PaginaDeEsquema.
  propiedad props como {}.
}, {
  propiedad path como "/autentificacion".
  propiedad name como "PaginaDeAutentificacion".
  propiedad component como PaginaDeAutentificacion.
  propiedad props como {}.
}] con traducciones {
    propiedad es como {}.
    propiedad en como {}.
    propiedad ca como {}.
} con plantilla {
  <div class="App Component Castelog-app win7">
    <template v-if="sesion_token && compacted_schema">
      <router-view :root="this"></router-view>
    </template>
    <template v-else="">
      <PaginaDeLogin :root="this" ref="pagina_de_login"></PaginaDeLogin>
    </template>
    <xdialogport></xdialogport>
  </div>
} con estilos {
    html {}
    body {}
    .Component {}
    .App {}
} con lógica {
  retorno {
    método data donde {
      retorno {
        autentication: undefined,
        original_schema: undefined,
        compacted_schema: undefined,
        sesion_token: undefined
      }.
    }.
    propiedad methods como {
      ##**
       * 
       * @name: obtener_schema
       * @type: Función
       * @description Hace una petición AJAX con método POST a "/Schema" con cabecera de autentificación. Extrae en el componente el esquema original y el compacto.
       *
       *##
      método asíncrono obtener_schema donde {
        debugo "App.obtener_schema".
        creo respuesta_schema como asíncronamente una petición http
          con url "/Schema"
          con método "POST"
          con cuerpo {}
          con cabeceras { authorization: this.sesion_token }
          en errores hago Vue.prototype.$dialogs.error(error).
        si respuesta_schema es instancia de Error retorno.
        asigno this.original_schema como respuesta_schema.data.data.esquema.original.
        asigno this.compacted_schema como respuesta_schema.data.data.esquema.compacto.
      } en errores hago Vue.prototype.$dialogs.error(error).
      método asíncrono login con (nombre, contrasenya) donde {
        debugo "App.login".
        creo respuesta_login como asíncronamente una petición http
          con url "/Login"
          con método "POST"
          con cuerpo { nombre, contrasenya }
          con cabeceras {}
          en errores retorno Vue.prototype.$dialogs.error(error).
        si respuesta_login es instancia de Error retorno.
        hago this.$refs.pagina_de_login.persistir_credenciales(nombre, contrasenya).
        asigno this.authentication como respuesta_login.data.data.
        asigno this.sesion_token como respuesta_login.data.data.sesion.token.
        hago asíncronamente this.obtener_schema().
      } en errores hago Vue.prototype.$dialogs.error(error).
      método humanizar_texto_de_columna con (tabla_arg, columna_arg) donde {
        creo esquema_compacto como this.compacted_schema.
        creo tabla como esquema_compacto[tabla_arg].
        creo variable columna como tabla.composicion[columna_arg].
        si columna.atributos.tiene_nombre {
          retorno columna.atributos.tiene_nombre.
        }.
        asigno columna como columna_arg.
        asigno columna como columna.replace(una nueva RegExp("_", "g"), " ").
        asigno columna como columna.replace(una nueva RegExp("[A-Z]", "g"), una función con (arg1) donde retorno " " + arg1.toLowerCase()).
        asigno columna como columna.substr(0,1).toUpperCase() + columna.substr(1).
        retorno columna.
      } en errores {
        asigno columna como columna_arg.
        asigno columna como columna.replace(una nueva RegExp("_", "g"), " ").
        asigno columna como columna.replace(una nueva RegExp("[A-Z]", "g"), una función con (arg1) donde retorno " " + arg1.toLowerCase()).
        asigno columna como columna.substr(0,1).toUpperCase() + columna.substr(1).
        retorno columna.
      }.
    }.
    propiedad watch como {}.
    método beforeMount donde {
      debugo "App.beforeMount".
      asigno this.$window como window.
    }.
    método mounted donde {}.
  }.
} montada en "#app".